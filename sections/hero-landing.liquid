{% comment %}
  Hero Landing Section for Titan Theme
  Enhanced with customizable text alignment and movement (left/right, up/down).
  Displays a hero section with Montserrat Black heading, DM Sans tagline, and buttons.
  Background image with conditional overlay, no shape behind text, inspired by beastbites.com.
  Fixed header and mobile menu overlap for Trade theme compatibility.
  Highly configurable, responsive, no scrollbar, with debugging for image loading and height.
  Corrected schema JSON to fix 'Invalid JSON' error in tagline_horizontal_offset.
{% endcomment %}

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link
  href="https://fonts.googleapis.com/css2?family=Montserrat:wght@900&family=DM+Sans:wght@400;500;700&display=swap"
  rel="stylesheet"
>

{{ 'section-hero-landing.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign fetch_priority = 'auto'
  if section.index == 1
    assign fetch_priority = 'high'
  endif
-%}

{%- style -%}
  :root {
    --header-height: 80px;
  }

  @media screen and (max-width: 749px) {
    :root {
      --header-height: 60px;
    }
  }

  #Hero-{{ section.id }} {
    overflow-x: hidden;
    background: {% if section.settings.background_gradient != blank %}
      {{ section.settings.background_gradient }}
    {% else %}
      {{ section.settings.background_color }}
    {% endif %};
    position: relative;
    z-index: 1;
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    height: auto;
    padding-top: calc(var(--header-height) + {{ section.settings.mobile_padding_top }}px);
    padding-bottom: {{ section.settings.mobile_padding_bottom }}px;
  }

  #Hero-{{ section.id }}.hero--small {
    min-height: 50vh;
    min-height: min(50vh, 400px);
  }

  #Hero-{{ section.id }}.hero--medium {
    min-height: 75vh;
    min-height: min(75vh, 600px);
  }

  #Hero-{{ section.id }}.hero--large {
    min-height: 100vh;
    min-height: min(100vh, 800px);
  }

  #Hero-{{ section.id }} .hero__content {
    display: flex;
    flex-direction: column;
    justify-content: {{ section.settings.content_vertical_align }};
    align-items: {{ section.settings.content_horizontal_align }};
    flex-grow: 1;
    text-align: {{ section.settings.content_text_alignment }};
    width: 100%;
    transform: translateX({{ section.settings.content_horizontal_offset }}%);
    margin-top: {{ section.settings.content_vertical_offset }}px;
  }

  #Hero-{{ section.id }} .hero__heading {
   font-family: var(--font-heading-family);
    font-weight: 900;
    font-size: {{ section.settings.heading_size | divided_by: 10.0 }}rem;
    color: {{ section.settings.heading_color }};
    text-align: {{ section.settings.heading_alignment }};
    margin-bottom: {{ section.settings.heading_margin }}px;
    line-height: 1.2;
    text-shadow: {% if section.settings.heading_shadow %}0 2px 4px rgba(0, 0, 0, 0.2){% else %}none{% endif %};
    transform: translateX({{ section.settings.heading_horizontal_offset }}%);
    margin-top: {{ section.settings.heading_vertical_offset }}px;
    transition: transform 0.5s ease, opacity 0.5s ease;
  }

  #Hero-{{ section.id }} .hero__tagline {
    font-family: var(--font-body-family);
    font-weight: {{ section.settings.tagline_weight }};
    font-size: {{ section.settings.tagline_size | divided_by: 10.0 }}rem;
    color: {{ section.settings.tagline_color }};
    text-align: {{ section.settings.tagline_alignment }};
    margin-bottom: {{ section.settings.tagline_margin }}px;
    transform: translateX({{ section.settings.tagline_horizontal_offset }}%);
    margin-top: {{ section.settings.tagline_vertical_offset }}px;
    transition: transform 0.5s ease, opacity 0.5s ease;
  }

  #Hero-{{ section.id }} .hero__buttons {
    text-align: {{ section.settings.buttons_alignment }};
    transform: translateX({{ section.settings.buttons_horizontal_offset }}%);
    margin-top: {{ section.settings.buttons_vertical_offset }}px;
  }

  #Hero-{{ section.id }} .hero__button {
    border-radius: {{ section.settings.button_border_radius }}px;
    padding: {{ section.settings.button_padding }}px {{ section.settings.button_padding | times: 2 }}px;
    font-size: {{ section.settings.button_font_size | divided_by: 10.0 }}rem;
    font-family: var(--font-body-family);
    transition: transform 0.3s ease, opacity 0.3s ease, box-shadow 0.3s ease;
    will-change: transform, opacity;
  }

  #Hero-{{ section.id }} .hero__button:hover {
    transform: scale(1.05);
    opacity: 0.9;
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.25);
  }

  .menu-drawer, .header__menu {
    z-index: 1000 !important;
  }

  @media screen and (max-width: 749px) {
    #Hero-{{ section.id }} {
      padding-top: calc(var(--header-height) + {{ section.settings.mobile_padding_top }}px);
      padding-bottom: {{ section.settings.mobile_padding_bottom }}px;
    }
    #Hero-{{ section.id }} .hero__content {
      transform: translateX({{ section.settings.content_horizontal_offset | times: 0.5 }}%);
      margin-top: {{ section.settings.content_vertical_offset | times: 0.5 }}px;
    }
    #Hero-{{ section.id }} .hero__heading {
      font-size: {{ section.settings.mobile_heading_size | divided_by: 10.0 }}rem;
      transform: translateX({{ section.settings.heading_horizontal_offset | times: 0.5 }}%);
      margin-top: {{ section.settings.heading_vertical_offset | times: 0.5 }}px;
    }
    #Hero-{{ section.id }} .hero__tagline {
      font-size: {{ section.settings.mobile_tagline_size | divided_by: 10.0 }}rem;
      transform: translateX({{ section.settings.tagline_horizontal_offset | times: 0.5 }}%);
      margin-top: {{ section.settings.tagline_vertical_offset | times: 0.5 }}px;
    }
    #Hero-{{ section.id }} .hero__buttons {
      transform: translateX({{ section.settings.buttons_horizontal_offset | times: 0.5 }}%);
      margin-top: {{ section.settings.buttons_vertical_offset | times: 0.5 }}px;
    }
  }

  @media screen and (min-width: 750px) {
    #Hero-{{ section.id }} {
      padding-top: calc(var(--header-height) + {{ section.settings.desktop_padding_top }}px);
      padding-bottom: {{ section.settings.desktop_padding_bottom }}px;
    }
  }

  {% if settings.animations_reveal_on_scroll %}
  #Hero-{{ section.id }} .hero__content > * {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }
  #Hero-{{ section.id }}.animate--fade-in .hero__content > * {
    opacity: 1;
    transform: translateY(0);
  }
  {% endif %}
{%- endstyle -%}

<section
  id="Hero-{{ section.id }}"
  class="hero hero--{{ section.settings.height }} color-{{ section.settings.color_scheme }} gradient{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}"
  aria-labelledby="HeroHeading-{{ section.id }}"
>
  {%- if section.settings.image != blank -%}
    <div
      class="hero__media media{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}"
      style="opacity: {{ 100 | minus: section.settings.image_overlay_opacity | divided_by: 100.0 }};"
    >
      <img
        src="{{ section.settings.image | image_url: width: 1920 }}"
        alt="{{ section.settings.image_alt | escape }}"
        widths="375, 750, 1100, 1500, 1780, 1920"
        sizes="100vw"
        fetchpriority="{{ fetch_priority }}"
        class="hero__media-image"
        loading="eager"
        id="HeroImage-{{ section.id }}"
      >
    </div>
  {%- else -%}
    <div class="hero__media media placeholder{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
      {{ 'hero-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
    </div>
  {%- endif -%}

  <div class="hero__content page-width">
    {%- for block in section.blocks -%}
      {%- case block.type -%}
        {%- when 'heading' -%}
          <h1
            class="hero__heading inline-richtext"
            id="HeroHeading-{{ section.id }}"
            {{ block.shopify_attributes }}
          >
            {{ block.settings.heading | escape }}
          </h1>
        {%- when 'tagline' -%}
          <div
            class="hero__tagline rte"
            {{ block.shopify_attributes }}
          >
            {{ block.settings.tagline }}
          </div>
        {%- when 'buttons' -%}
          <div
            class="hero__buttons{% if block.settings.button_label_1 != blank and block.settings.button_label_2 != blank %} hero__buttons--multiple{% endif %}"
            {{ block.shopify_attributes }}
          >
            {%- if block.settings.button_label_1 != blank -%}
              <a
                {% if block.settings.button_link_1 == blank %}
                  role="link" aria-disabled="true"
                {% else %}
                  href="{{ block.settings.button_link_1 }}"
                {% endif %}
                class="hero__button button{% if block.settings.button_style_secondary_1 %} button--secondary{% else %} button--primary{% endif %}"
                style="background: {{ block.settings.button_color_1 }}; color: {{ block.settings.button_text_color_1 }};"
              >
                {{ block.settings.button_label_1 | escape }}
              </a>
            {%- endif -%}
            {%- if block.settings.button_label_2 != blank -%}
              <a
                {% if block.settings.button_link_2 == blank %}
                  role="link" aria-disabled="true"
                {% else %}
                  href="{{ block.settings.button_link_2 }}"
                {% endif %}
                class="hero__button button{% if block.settings.button_style_secondary_2 %} button--secondary{% else %} button--primary{% endif %}"
                style="background: {{ block.settings.button_color_2 }}; color: {{ block.settings.button_text_color_2 }};"
              >
                {{ block.settings.button_label_2 | escape }}
              </a>
            {%- endif -%}
          </div>
      {%- endcase -%}
    {%- endfor -%}
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const hero = document.getElementById('Hero-{{ section.id }}');
    if (hero) {
      const heightClass = ['hero--small', 'hero--medium', 'hero--large'].find(cls => hero.classList.contains(cls));
      const computedHeight = window.getComputedStyle(hero).minHeight;
      console.log('Hero Section Height Class:', heightClass || 'None');
      console.log('Hero Section Computed min-height:', computedHeight);
    } else {
      console.error('Hero Section not found');
    }

    const img = document.getElementById('HeroImage-{{ section.id }}');
    if (img) {
      console.log('Hero Image URL:', img.src);
      img.addEventListener('error', () => {
        console.error('Hero Image failed to load:', img.src);
      });
    } else {
      console.error('Hero Image element not found');
    }

    const header = document.querySelector('.header');
    if (header) {
      const headerHeight = header.offsetHeight;
      document.documentElement.style.setProperty('--header-height', `${headerHeight}px`);
    }

    {% if settings.animations_reveal_on_scroll %}
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate--fade-in');
        }
      });
    }, { threshold: 0.1 });
    observer.observe(hero);
    {% endif %}
  });
</script>

{% schema %}
{
  "name": "Hero Landing",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["footer"]
  },
  "settings": [
    {
      "type": "header",
      "content": "Background"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Background image"
    },
    {
      "type": "text",
      "id": "image_alt",
      "label": "Background image alt text",
      "default": "Hero background image",
      "info": "Describe the image for accessibility"
    },
    {
      "type": "range",
      "id": "image_overlay_opacity",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "%",
      "label": "Image overlay opacity",
      "default": 20
    },
    {
      "type": "color",
      "id": "background_color",
      "default": "#F5F5F5",
      "label": "Background color",
      "info": "Used if no image or gradient is set"
    },
    {
      "type": "color_background",
      "id": "background_gradient",
      "label": "Background gradient",
      "info": "Used if no image is set"
    },
    {
      "type": "select",
      "id": "image_behavior",
      "options": [
        { "value": "none", "label": "None" },
        { "value": "ambient", "label": "Ambient" },
        { "value": "zoom-in", "label": "Zoom In" }
      ],
      "default": "none",
      "label": "Image animation"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "height",
      "options": [
        { "value": "small", "label": "Small" },
        { "value": "medium", "label": "Medium" },
        { "value": "large", "label": "Large" }
      ],
      "default": "medium",
      "label": "Section height"
    },
    {
      "type": "select",
      "id": "content_horizontal_align",
      "options": [
        { "value": "flex-start", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "flex-end", "label": "Right" }
      ],
      "default": "center",
      "label": "Content horizontal alignment"
    },
    {
      "type": "select",
      "id": "content_vertical_align",
      "options": [
        { "value": "flex-start", "label": "Top" },
        { "value": "center", "label": "Center" },
        { "value": "flex-end", "label": "Bottom" }
      ],
      "default": "center",
      "label": "Content vertical alignment"
    },
    {
      "type": "select",
      "id": "content_text_alignment",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ],
      "default": "center",
      "label": "Content text alignment"
    },
    {
      "type": "range",
      "id": "content_horizontal_offset",
      "min": -50,
      "max": 50,
      "step": 5,
      "unit": "%",
      "default": 0,
      "label": "Content horizontal offset"
    },
    {
      "type": "range",
      "id": "content_vertical_offset",
      "min": -100,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 0,
      "label": "Content vertical offset"
    },
    {
      "type": "range",
      "id": "mobile_padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 40,
      "label": "Mobile top padding"
    },
    {
      "type": "range",
      "id": "mobile_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 40,
      "label": "Mobile bottom padding"
    },
    {
      "type": "range",
      "id": "desktop_padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 60,
      "label": "Desktop top padding"
    },
    {
      "type": "range",
      "id": "desktop_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 60,
      "label": "Desktop bottom padding"
    },
    {
      "type": "header",
      "content": "Heading Styling"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 200,
      "step": 2,
      "unit": "px",
      "default": 60,
      "label": "Heading size"
    },
    {
      "type": "range",
      "id": "mobile_heading_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "default": 40,
      "label": "Mobile heading size"
    },
    {
      "type": "color",
      "id": "heading_color",
      "default": "#FFFFFF",
      "label": "Heading color"
    },
    {
      "type": "checkbox",
      "id": "heading_shadow",
      "default": false,
      "label": "Enable heading shadow"
    },
    {
      "type": "range",
      "id": "heading_margin",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "default": 20,
      "label": "Heading bottom margin"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ],
      "default": "center",
      "label": "Heading text alignment"
    },
    {
      "type": "range",
      "id": "heading_horizontal_offset",
      "min": -50,
      "max": 50,
      "step": 5,
      "unit": "%",
      "default": 0,
      "label": "Heading horizontal offset"
    },
    {
      "type": "range",
      "id": "heading_vertical_offset",
      "min": -50,
      "max": 50,
      "step": 5,
      "unit": "px",
      "default": 0,
      "label": "Heading vertical offset"
    },
    {
      "type": "header",
      "content": "Tagline Styling"
    },
    {
      "type": "range",
      "id": "tagline_size",
      "min": 10,
      "max": 32,
      "step": 2,
      "unit": "px",
      "default": 20,
      "label": "Tagline size"
    },
    {
      "type": "range",
      "id": "mobile_tagline_size",
      "min": 10,
      "max": 24,
      "step": 2,
      "unit": "px",
      "default": 16,
      "label": "Mobile tagline size"
    },
    {
      "type": "select",
      "id": "tagline_weight",
      "options": [
        { "value": "400", "label": "Normal" },
        { "value": "500", "label": "Medium" },
        { "value": "700", "label": "Bold" }
      ],
      "default": "400",
      "label": "Tagline weight"
    },
    {
      "type": "color",
      "id": "tagline_color",
      "default": "#FFFFFF",
      "label": "Tagline color"
    },
    {
      "type": "range",
      "id": "tagline_margin",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "default": 20,
      "label": "Tagline bottom margin"
    },
    {
      "type": "select",
      "id": "tagline_alignment",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ],
      "default": "center",
      "label": "Tagline text alignment"
    },
    {
      "type": "range",
      "id": "tagline_horizontal_offset",
      "min": -50,
      "max": 50,
      "step": 5,
      "unit": "%",
      "default": 0,
      "label": "Tagline horizontal offset"
    },
    {
      "type": "range",
      "id": "tagline_vertical_offset",
      "min": -50,
      "max": 50,
      "step": 5,
      "unit": "px",
      "default": 0,
      "label": "Tagline vertical offset"
    },
    {
      "type": "header",
      "content": "Button Styling"
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "default": 8,
      "label": "Button border radius"
    },
    {
      "type": "range",
      "id": "button_padding",
      "min": 8,
      "max": 20,
      "step": 2,
      "unit": "px",
      "default": 12,
      "label": "Button padding"
    },
    {
      "type": "range",
      "id": "button_font_size",
      "min": 12,
      "max": 24,
      "step": 2,
      "unit": "px",
      "default": 16,
      "label": "Button font size"
    },
    {
      "type": "select",
      "id": "buttons_alignment",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ],
      "default": "center",
      "label": "Buttons alignment"
    },
    {
      "type": "range",
      "id": "buttons_horizontal_offset",
      "min": -50,
      "max": 50,
      "step": 5,
      "unit": "%",
      "default": 0,
      "label": "Buttons horizontal offset"
    },
    {
      "type": "range",
      "id": "buttons_vertical_offset",
      "min": -50,
      "max": 50,
      "step": 5,
      "unit": "px",
      "default": 0,
      "label": "Buttons vertical offset"
    },
    {
      "type": "header",
      "content": "Color Scheme"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        { "value": "accent-1", "label": "Accent 1" },
        { "value": "accent-2", "label": "Accent 2" },
        { "value": "background-1", "label": "Background 1" },
        { "value": "background-2", "label": "Background 2" },
        { "value": "inverse", "label": "Inverse" }
      ],
      "default": "background-1",
      "label": "Section color scheme"
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "Heading",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "Welcome to Our Store",
          "label": "Heading"
        }
      ]
    },
    {
      "type": "tagline",
      "name": "Tagline",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "tagline",
          "default": "<p>Discover premium products crafted for you.</p>",
          "label": "Tagline"
        }
      ]
    },
    {
      "type": "buttons",
      "name": "Buttons",
      "limit": 1,
      "settings": [
        {
          "type": "header",
          "content": "First Button"
        },
        {
          "type": "text",
          "id": "button_label_1",
          "default": "Shop Now",
          "label": "Button label"
        },
        {
          "type": "url",
          "id": "button_link_1",
          "label": "Button link"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary_1",
          "default": false,
          "label": "Use secondary style"
        },
        {
          "type": "color",
          "id": "button_color_1",
          "default": "#2E2A39",
          "label": "Button background color"
        },
        {
          "type": "color",
          "id": "button_text_color_1",
          "default": "#FFFFFF",
          "label": "Button text color"
        },
        {
          "type": "header",
          "content": "Second Button"
        },
        {
          "type": "text",
          "id": "button_label_2",
          "default": "Learn More",
          "label": "Button label",
          "info": "Leave blank to hide"
        },
        {
          "type": "url",
          "id": "button_link_2",
          "label": "Button link"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary_2",
          "default": true,
          "label": "Use secondary style"
        },
        {
          "type": "color",
          "id": "button_color_2",
          "default": "#FFFFFF",
          "label": "Button background color"
        },
        {
          "type": "color",
          "id": "button_text_color_2",
          "default": "#2E2A39",
          "label": "Button text color"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Hero Landing",
      "blocks": [
        { "type": "heading" },
        { "type": "tagline" },
        { "type": "buttons" }
      ]
    }
  ]
}
{% endschema %}
