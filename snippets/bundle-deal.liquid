{% comment %}
  Updated Bundle and Save Snippet for Shopify Trade Theme
  Configured as a customizable block under main-product
  Fixes variant images to show product/variant images
  Adds plus/minus buttons to quantity input
  Independent of quantity selector
  Maintains BeastBites aesthetic: long blocks, SVG ribbon, black/white colors
  Compatible with global.js for color normalization
{% endcomment %}

{% assign selected_variant = product.selected_or_first_available_variant %}
{% assign original_price = selected_variant.price %}
{% assign currency = shop.currency %}
{% assign placeholder_image = 'placeholder.png' | asset_url %}
{% assign title = block.settings.title | default: 'Bundle & Save More!' %}
{% assign discount_2 = block.settings.discount_2 | default: 10 | divided_by: 100.0 %}
{% assign discount_3 = block.settings.discount_3 | default: 25 | divided_by: 100.0 %}
{% assign free_gift_threshold = block.settings.free_gift_threshold | default: 3 %}

<bundle-deal
  class="bundle-deal bundle-deal-{{ section.id }}"
  id="Bundle-{{ section.id }}"
  data-product-id="{{ product.id }}"
  data-selected-variant="{{ selected_variant.id }}"
  data-currency="{{ currency }}"
  data-discount-2="{{ discount_2 }}"
  data-discount-3="{{ discount_3 }}"
  data-free-gift-threshold="{{ free_gift_threshold }}"
>
  <h4 class="bundle-deal__title">
    <span>{{ title }}</span>
  </h4>

  {% comment %} Mode Toggle {% endcomment %}
  <div class="bundle-deal__mode-toggle">
    <label class="bundle-deal__mode-option">
      <input
        type="radio"
        name="mode-{{ section.id }}"
        value="quantity"
        checked
        class="bundle-deal__mode-radio"
      >
      <span class="bundle-deal__mode-label">Choose Quantity</span>
    </label>
    <label class="bundle-deal__mode-option">
      <input
        type="radio"
        name="mode-{{ section.id }}"
        value="bundle"
        class="bundle-deal__mode-radio"
      >
      <span class="bundle-deal__mode-label">Bundle & Save</span>
    </label>
  </div>

  {% comment %} Quantity Input with Plus/Minus {% endcomment %}
  <div class="bundle-deal__quantity" data-mode="quantity">
    <label for="quantity-input-{{ section.id }}" class="bundle-deal__quantity-label">Quantity:</label>
    <div class="bundle-deal__quantity-control">
      <button
        type="button"
        class="bundle-deal__quantity-button bundle-deal__quantity-minus"
        aria-label="Decrease quantity"
      >
        −
      </button>
      <input
        type="number"
        id="quantity-input-{{ section.id }}"
        class="bundle-deal__quantity-input"
        min="1"
        value="1"
      >
      <button
        type="button"
        class="bundle-deal__quantity-button bundle-deal__quantity-plus"
        aria-label="Increase quantity"
      >
        +
      </button>
    </div>
  </div>

  {% comment %} Bundle Selector {% endcomment %}
  <div class="bundle-deal__quantity" data-mode="bundle" style="display: none;">
    <label for="bundle-quantity-{{ section.id }}" class="bundle-deal__quantity-label">Select Bundle Size:</label>
    <select id="bundle-quantity-{{ section.id }}" class="bundle-deal__quantity-select">
      <option value="1" selected>Buy 1</option>
      <option value="2">Bundle of 2 ({{ block.settings.discount_2 }}% Off)</option>
      <option value="3">Bundle of 3 ({{ block.settings.discount_3 }}% Off + Free Gift)</option>
    </select>
  </div>

  {% comment %} Bundle Options {% endcomment %}
  <div class="bundle-deal__options" data-bundle-options="1" data-mode="quantity">
    <div class="bundle-deal__option bundle-deal__option--1">
      <div class="bundle-deal__info">
        <h5 class="bundle-deal__option-title">Buy 1</h5>
        <p class="bundle-deal__subtitle">Regular Price</p>
        <div class="bundle-deal__price">
          <span class="bundle-deal__discounted-price" data-price="{{ original_price }}">
            {{- original_price | money -}}
          </span>
          {% if selected_variant.compare_at_price > original_price %}
            <span class="bundle-deal__compare-price" data-compare-price="{{ selected_variant.compare_at_price }}">
              {{- selected_variant.compare_at_price | money -}}
            </span>
          {% endif %}
        </div>
      </div>
      <div class="bundle-deal__variants">
        <div class="bundle-deal__variant-row">
          <span class="bundle-deal__variant-label">#1</span>
          <img
            src="{% if selected_variant.featured_image.src %}{{ selected_variant.featured_image | img_url: '60x60', crop: 'center' }}{% elsif product.featured_image.src %}{{ product.featured_image | img_url: '60x60', crop: 'center' }}{% else %}{{ placeholder_image }}{% endif %}"
            width="60"
            height="60"
            class="bundle-deal__variant-image"
            alt="{{ selected_variant.title | escape }}"
            data-image="{% if selected_variant.featured_image.src %}{{ selected_variant.featured_image | img_url: '60x60', crop: 'center' }}{% elsif product.featured_image.src %}{{ product.featured_image | img_url: '60x60', crop: 'center' }}{% else %}{{ placeholder_image }}{% endif %}"
          >
          <select
            class="bundle-deal__variant-select"
            name="variant-1-1-{{ section.id }}"
            data-bundle="1"
            data-index="1"
          >
            {% for variant in product.variants %}
              <option
                value="{{ variant.id }}"
                {% if variant == selected_variant %}
                  selected
                {% endif %}
                data-price="{{ variant.price }}"
                data-compare-price="{{ variant.compare_at_price | default: variant.price }}"
                data-image="{% if variant.featured_image.src %}{{ variant.featured_image | img_url: '60x60', crop: 'center' }}{% elsif product.featured_image.src %}{{ product.featured_image | img_url: '60x60', crop: 'center' }}{% else %}{{ placeholder_image }}{% endif %}"
                data-color="{{ variant.title | downcase | replace: ' ', '-' }}"
              >
                {{ variant.title }}
              </option>
            {% endfor %}
          </select>
          <input type="hidden" name="items[0][id]" class="bundle-deal__variant-id" value="{{ selected_variant.id }}">
        </div>
      </div>
    </div>

    <div class="bundle-deal__option bundle-deal__option--2" style="display: none;" data-ribbon>
      <div class="bundle-deal__info">
        <h5 class="bundle-deal__option-title">Bundle of 2</h5>
        <div class="bundle-deal__badge">Save {{ original_price | times: 2 | times: discount_2 | money }}</div>
        <p class="bundle-deal__subtitle">{{ block.settings.discount_2 }}% Off - Perfect for you & a friend</p>
        <div class="bundle-deal__price">
          <span
            class="bundle-deal__discounted-price"
            data-price="{{ original_price | times: 2 | times: 1 | minus: discount_2 }}"
          >
            {{- original_price | times: 2 | times: 1 | minus: discount_2 | money -}}
          </span>
          <span class="bundle-deal__compare-price" data-compare-price="{{ original_price | times: 2 }}">
            {{- original_price | times: 2 | money -}}
          </span>
        </div>
      </div>
      <div class="bundle-deal__variants">
        {% for i in (1..2) %}
          <div class="bundle-deal__variant-row">
            <span class="bundle-deal__variant-label">#{{ i }}</span>
            <img
              src="{% if selected_variant.featured_image.src %}{{ selected_variant.featured_image | img_url: '60x60', crop: 'center' }}{% elsif product.featured_image.src %}{{ product.featured_image | img_url: '60x60', crop: 'center' }}{% else %}{{ placeholder_image }}{% endif %}"
              width="60"
              height="60"
              class="bundle-deal__variant-image"
              alt="{{ selected_variant.title | escape }}"
              data-image="{% if selected_variant.featured_image.src %}{{ selected_variant.featured_image | img_url: '60x60', crop: 'center' }}{% elsif product.featured_image.src %}{{ product.featured_image | img_url: '60x60', crop: 'center' }}{% else %}{{ placeholder_image }}{% endif %}"
            >
            <select
              class="bundle-deal__variant-select"
              name="variant-2-{{ i }}-{{ section.id }}"
              data-bundle="2"
              data-index="{{ i }}"
            >
              {% for variant in product.variants %}
                <option
                  value="{{ variant.id }}"
                  {% if variant == selected_variant %}
                    selected
                  {% endif %}
                  data-price="{{ variant.price }}"
                  data-compare-price="{{ variant.compare_at_price | default: variant.price }}"
                  data-image="{% if variant.featured_image.src %}{{ variant.featured_image | img_url: '60x60', crop: 'center' }}{% elsif product.featured_image.src %}{{ product.featured_image | img_url: '60x60', crop: 'center' }}{% else %}{{ placeholder_image }}{% endif %}"
                  data-color="{{ variant.title | downcase | replace: ' ', '-' }}"
                >
                  {{ variant.title }}
                </option>
              {% endfor %}
            </select>
            <input
              type="hidden"
              name="items[{{ i | minus: 1 }}][id]"
              class="bundle-deal__variant-id"
              value="{{ selected_variant.id }}"
            >
          </div>
        {% endfor %}
      </div>
    </div>

    <div class="bundle-deal__option bundle-deal__option--3" style="display: none;">
      <div class="bundle-deal__info">
        <h5 class="bundle-deal__option-title">Bundle of 3</h5>
        <div class="bundle-deal__badge">Save {{ original_price | times: 3 | times: discount_3 | money }}</div>
        <p class="bundle-deal__subtitle">{{ block.settings.discount_3 }}% Off + Free Gift</p>
        <div class="bundle-deal__price">
          <span
            class="bundle-deal__discounted-price"
            data-price="{{ original_price | times: 3 | times: 1 | minus: discount_3 }}"
          >
            {{- original_price | times: 3 | times: 1 | minus: discount_3 | money -}}
          </span>
          <span class="bundle-deal__compare-price" data-compare-price="{{ original_price | times: 3 }}">
            {{- original_price | times: 3 | money -}}
          </span>
        </div>
      </div>
      <div class="bundle-deal__variants">
        {% for i in (1..3) %}
          <div class="bundle-deal__variant-row">
            <span class="bundle-deal__variant-label">#{{ i }}</span>
            <img
              src="{% if selected_variant.featured_image.src %}{{ selected_variant.featured_image | img_url: '60x60', crop: 'center' }}{% elsif product.featured_image.src %}{{ product.featured_image | img_url: '60x60', crop: 'center' }}{% else %}{{ placeholder_image }}{% endif %}"
              width="60"
              height="60"
              class="bundle-deal__variant-image"
              alt="{{ selected_variant.title | escape }}"
              data-image="{% if selected_variant.featured_image.src %}{{ selected_variant.featured_image | img_url: '60x60', crop: 'center' }}{% elsif product.featured_image.src %}{{ product.featured_image | img_url: '60x60', crop: 'center' }}{% else %}{{ placeholder_image }}{% endif %}"
            >
            <select
              class="bundle-deal__variant-select"
              name="variant-3-{{ i }}-{{ section.id }}"
              data-bundle="3"
              data-index="{{ i }}"
            >
              {% for variant in product.variants %}
                <option
                  value="{{ variant.id }}"
                  {% if variant == selected_variant %}
                    selected
                  {% endif %}
                  data-price="{{ variant.price }}"
                  data-compare-price="{{ variant.compare_at_price | default: variant.price }}"
                  data-image="{% if variant.featured_image.src %}{{ variant.featured_image | img_url: '60x60', crop: 'center' }}{% elsif product.featured_image.src %}{{ product.featured_image | img_url: '60x60', crop: 'center' }}{% else %}{{ placeholder_image }}{% endif %}"
                  data-color="{{ variant.title | downcase | replace: ' ', '-' }}"
                >
                  {{ variant.title }}
                </option>
              {% endfor %}
            </select>
            <input
              type="hidden"
              name="items[{{ i | minus: 1 }}][id]"
              class="bundle-deal__variant-id"
              value="{{ selected_variant.id }}"
            >
          </div>
        {% endfor %}
      </div>
      <div class="bundle-deal__gift">
        <span class="bundle-deal__gift-text">🎁 Free Gift Included!</span>
      </div>
    </div>
  </div>

  <button type="button" class="bundle-deal__add-to-cart">Add to Cart</button>

  <style>
    :root {
      --color-background: var(--color-background, 255, 255, 255); /* Shopify theme variable or white */
      --color-primary: #000000; /* Black for borders, text */
      --color-text: #000000; /* Black for text */
      --color-selected-bg: #FFFFFF; /* White for selected background */
      --color-subtitle: #666666; /* Gray for subtitles */
      --color-accent: #000000; /* Black for title line */
      --color-gift-bg: #000000; /* Black for gift background */
      --color-gift-text: #FFFFFF; /* White for gift text */
      --border-radius: 8px;
      --font-title-size: 18px;
      --font-title-weight: 700;
      --font-subtitle-size: 14px;
      --font-price-size: 16px;
      --font-price-weight: 700;
      --font-compare-price-size: 14px;
      --transition: all 0.3s ease;
    }

    .bundle-deal-{{ section.id }} {
      max-width: 600px;
      margin: 20px auto;
      padding: 20px;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
      border: 2px solid var(--color-primary);
      border-radius: var(--border-radius);
      background: var(--color-selected-bg);
    }

    .bundle-deal__title {
      text-align: center;
      margin-bottom: 20px;
      position: relative;
    }

    .bundle-deal__title span {
      background: var(--color-background);
      color: var(--color-primary);
      font-size: 20px;
      font-weight: 700;
      text-transform: uppercase;
      padding: 0 15px;
      display: inline-block;
    }

    .bundle-deal__title:before {
      content: '';
      position: absolute;
      top: 50%;
      left: 0;
      right: 0;
      height: 2px;
      background: var(--color-accent);
      z-index: -1;
    }

    .bundle-deal__mode-toggle {
      display: flex;
      gap: 20px;
      margin-bottom: 20px;
      justify-content: center;
    }

    .bundle-deal__mode-option {
      display: flex;
      align-items: center;
      gap: 8px;
      cursor: pointer;
    }

    .bundle-deal__mode-radio {
      appearance: none;
      width: 20px;
      height: 20px;
      border: 2px solid var(--color-primary);
      border-radius: 50%;
      position: relative;
      cursor: pointer;
    }

    .bundle-deal__mode-radio:checked::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 12px;
      height: 12px;
      background: var(--color-primary);
      border-radius: 50%;
    }

    .bundle-deal__mode-radio:focus {
      outline: 2px solid #4a90e2;
      outline-offset: 2px;
    }

    .bundle-deal__mode-label {
      font-size: 16px;
      font-weight: 600;
      color: var(--color-text);
    }

    .bundle-deal__quantity {
      margin-bottom: 20px;
    }

    .bundle-deal__quantity-label {
      display: block;
      font-size: 16px;
      font-weight: 600;
      color: var(--color-text);
      margin-bottom: 8px;
    }

    .bundle-deal__quantity-control {
      display: flex;
      align-items: center;
      gap: 0;
    }

    .bundle-deal__quantity-input,
    .bundle-deal__quantity-select {
      width: 100%;
      padding: 10px;
      border: 2px solid var(--color-primary);
      border-radius: var(--border-radius);
      font-size: 16px;
      background: var(--color-selected-bg);
      color: var(--color-text);
      cursor: pointer;
      text-align: center;
    }

    .bundle-deal__quantity-input {
      border-radius: 0;
      border-left: none;
      border-right: none;
      max-width: 80px;
    }

    .bundle-deal__quantity-button {
      padding: 10px 15px;
      border: 2px solid var(--color-primary);
      background: var(--color-selected-bg);
      color: var(--color-text);
      font-size: 16px;
      cursor: pointer;
      transition: var(--transition);
    }

    .bundle-deal__quantity-button:hover,
    .bundle-deal__quantity-button:focus {
      background: #f0f0f0;
      outline: 2px solid #4a90e2;
      outline-offset: 2px;
    }

    .bundle-deal__quantity-minus {
      border-radius: var(--border-radius) 0 0 var(--border-radius);
    }

    .bundle-deal__quantity-plus {
      border-radius: 0 var(--border-radius) var(--border-radius) 0;
    }

    .bundle-deal__quantity-input:focus,
    .bundle-deal__quantity-select:focus {
      outline: 2px solid #4a90e2;
      outline-offset: 2px;
    }

    .bundle-deal__option {
      background: var(--color-selected-bg);
      border: 2px solid var(--color-primary);
      border-radius: var(--border-radius);
      padding: 15px;
      margin-bottom: 15px;
      transition: var(--transition);
      position: relative;
    }

    .bundle-deal__option--active {
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

    .bundle-deal__option[data-ribbon]::before {
      content: '';
      position: absolute;
      top: -10px;
      right: -20px;
      width: 100px;
      height: 50px;
      background: url('data:image/svg+xml;utf8,<svg viewBox="0 0 1179 476" fill="none" xmlns="http://www.w3.org/2000/svg"><g filter="url(#filter0_d)"><g filter="url(#filter1_i)"><mask id="mask0" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="981" y="117" width="168" height="319"><path d="M981.264 117.77H1148.37V435.745H981.264V117.77Z" fill="white"></path></mask><g mask="url(#mask0)"><path d="M1148.53 293.324L1148.69 293.186L1148.58 293.004L1044.29 120.222L1044.18 120.028L1043.97 120.126L981.576 150.164L981.435 150.233V150.39V435.469V436.011L981.847 435.659L1148.53 293.324Z" fill="url(#paint0_linear)" stroke="#000000" stroke-width="0.5"></path></g></g><g filter="url(#filter2_iii)"><mask id="mask1" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="31" y="20" width="1118" height="277"><path d="M31 20.665H1148.37V296.1H31V20.665Z" fill="white"></path></mask><g mask="url(#mask1)"><path d="M1148.37 293.384H1148.62V293.134V21.9746V21.7246H1148.37H31.1441H30.7428L30.9197 22.0848L164.055 293.244L164.124 293.384H164.28H1148.37Z" fill="url(#paint1_linear)" stroke="#000000" stroke-width="0.5"></path></g></g></g><defs><filter id="filter0_d" x="0.6" y="0.0746098" width="1178.17" height="475.071" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB"><feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix><feOffset dy="9"></feOffset><feGaussianBlur stdDeviation="15.2"></feGaussianBlur><feComposite in2="hardAlpha" operator="out"></feComposite><feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.35 0"></feColorMatrix><feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"></feBlend><feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"></feBlend></filter><filter id="filter1_i" x="981.264" y="108.704" width="167.101" height="327.041" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB"><feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood><feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"></feBlend><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix><feOffset dy="-11"></feOffset><feGaussianBlur stdDeviation="6.45"></feGaussianBlur><feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"></feComposite><feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"></feColorMatrix><feBlend mode="normal" in2="shape" result="effect1_innerShadow"></feBlend></filter><filter id="filter2_iii" x="28" y="10.4746" width="1120.37" height="289.959" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB"><feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood><feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"></feBlend><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix><feOffset dy="-11"></feOffset><feGaussianBlur stdDeviation="6.45"></feGaussianBlur><feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"></feComposite><feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"></feColorMatrix><feBlend mode="normal" in2="shape" result="effect1_innerShadow"></feBlend><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix><feOffset dx="-3" dy="11"></feOffset><feGaussianBlur stdDeviation="3.4"></feGaussianBlur><feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"></feComposite><feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0"></feColorMatrix><feBlend mode="normal" in2="effect1_innerShadow" result="effect2_innerShadow"></feBlend><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix><feOffset dy="2"></feOffset><feGaussianBlur stdDeviation="4.5"></feGaussianBlur><feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"></feComposite><feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0"></feColorMatrix><feBlend mode="normal" in2="effect2_innerShadow" result="effect3_innerShadow"></feBlend></filter><linearGradient id="paint0_linear" x1="984.5" y1="421.666" x2="1063.5" y2="197.166" gradientUnits="userSpaceOnUse"><stop stop-color="#000000"></stop><stop offset="0.525" stop-color="#333333"></stop></linearGradient><linearGradient id="paint1_linear" x1="31.1441" y1="36.8739" x2="1148.37" y2="278.234" gradientUnits="userSpaceOnUse"><stop stop-color="#FFFFFF"></stop><stop offset="1" stop-color="#CCCCCC"></stop></linearGradient></defs></svg>')
        no-repeat top right;
      background-size: 100px 50px;
    }

    @media (max-width: 750px) {
      .bundle-deal__option[data-ribbon]::before {
        display: none;
      }
    }

    .bundle-deal__info {
      margin-bottom: 15px;
    }

    .bundle-deal__option-title {
      font-size: var(--font-title-size);
      font-weight: var(--font-title-weight);
      color: var(--color-text);
      margin: 0 0 5px;
    }

    .bundle-deal__badge {
      display: inline-block;
      background: var(--color-primary);
      color: var(--color-selected-bg);
      font-size: 12px;
      font-weight: 600;
      padding: 4px 8px;
      border-radius: 4px;
      margin: 5px 0;
    }

    .bundle-deal__subtitle {
      font-size: var(--font-subtitle-size);
      color: var(--color-subtitle);
      margin: 5px 0 0;
    }

    .bundle-deal__price {
      margin-top: 10px;
    }

    .bundle-deal__discounted-price {
      font-size: var(--font-price-size);
      font-weight: var(--font-price-weight);
      color: var(--color-text);
      margin-right: 8px;
    }

    .bundle-deal__compare-price {
      font-size: var(--font-compare-price-size);
      color: var(--color-subtitle);
      text-decoration: line-through;
    }

    .bundle-deal__variants {
      display: grid;
      gap: 12px;
    }

    .bundle-deal__variant-row {
      display: flex;
      align-items: center;
      gap: 12px;
    }

    .bundle-deal__variant-label {
      width: 30px;
      font-size: 14px;
      font-weight: 600;
      color: var(--color-text);
      text-align: center;
    }

    .bundle-deal__variant-image {
      border-radius: 4px;
      object-fit: cover;
    }

    .bundle-deal__variant-select {
      flex: 1;
      padding: 8px;
      border: 2px solid var(--color-primary);
      border-radius: var(--border-radius);
      background: var(--color-selected-bg);
      font-size: 14px;
      color: var(--color-text);
      max-width: 200px;
      cursor: pointer;
    }

    .bundle-deal__variant-select:focus {
      outline: 2px solid #4a90e2;
      outline-offset: 2px;
    }

    .bundle-deal__gift {
      margin-top: 15px;
      padding: 10px;
      background: var(--color-gift-bg);
      border-radius: var(--border-radius);
      text-align: center;
    }

    .bundle-deal__gift-text {
      color: var(--color-gift-text);
      font-size: 14px;
      font-weight: 600;
    }

    .bundle-deal__add-to-cart {
      display: block;
      width: 100%;
      padding: 12px;
      background: var(--color-primary);
      color: var(--color-selected-bg);
      font-size: 16px;
      font-weight: 700;
      border: none;
      border-radius: var(--border-radius);
      cursor: pointer;
      transition: var(--transition);
      margin-top: 20px;
    }

    .bundle-deal__add-to-cart:hover,
    .bundle-deal__add-to-cart:focus {
      background: #333333;
      outline: 2px solid #4a90e2;
      outline-offset: 2px;
    }

    @media (max-width: 750px) {
      .bundle-deal-{{ section.id }} {
        padding: 10px;
        margin: 10px auto;
      }

      .bundle-deal__title span {
        font-size: 16px;
      }

      .bundle-deal__mode-toggle {
        flex-direction: column;
        align-items: flex-start;
      }

      .bundle-deal__option {
        padding: 10px;
      }

      .bundle-deal__variant-select {
        max-width: none;
      }

      .bundle-deal__variant-row {
        flex-wrap: wrap;
      }

      .bundle-deal__variant-label {
        width: 100%;
        text-align: left;
      }

      .bundle-deal__variant-image {
        margin-right: 0;
      }

      .bundle-deal__quantity-control {
        max-width: 200px;
      }
    }
  </style>

  <script>
    class BundleDeal extends HTMLElement {
      constructor() {
        super();
        this.modeRadios = this.querySelectorAll('.bundle-deal__mode-radio');
        this.quantityInput = this.querySelector('.bundle-deal__quantity-input');
        this.quantityMinus = this.querySelector('.bundle-deal__quantity-minus');
        this.quantityPlus = this.querySelector('.bundle-deal__quantity-plus');
        this.quantitySelect = this.querySelector('.bundle-deal__quantity-select');
        this.optionsContainer = this.querySelector('.bundle-deal__options');
        this.addToCartButton = this.querySelector('.bundle-deal__add-to-cart');
        this.currency = this.dataset.currency;
        this.discounts = {
          1: 0,
          2: parseFloat(this.dataset.discount2),
          3: parseFloat(this.dataset.discount3)
        };
        this.freeGiftThreshold = parseInt(this.dataset.freeGiftThreshold);
      }

      connectedCallback() {
        this.initialize();
        this.addEventListeners();
      }

      initialize() {
        const mode = this.getSelectedMode();
        this.updateMode(mode);
        if (mode === 'bundle') {
          this.updateDisplay(this.quantitySelect.value);
        } else {
          this.updateDisplay('1');
        }
        this.syncVariants();
      }

      addEventListeners() {
        this.modeRadios.forEach(radio => {
          radio.addEventListener('change', () => {
            const mode = this.getSelectedMode();
            this.updateMode(mode);
            this.updateDisplay(mode === 'bundle' ? this.quantitySelect.value : '1');
            this.syncVariants();
          });
        });

        this.quantitySelect.addEventListener('change', (e) => {
          this.updateDisplay(e.target.value);
          this.syncVariants();
        });

        this.quantityInput.addEventListener('input', () => {
          this.updatePrices(1);
          this.syncVariants();
        });

        this.quantityMinus.addEventListener('click', () => {
          const currentValue = parseInt(this.quantityInput.value) || 1;
          if (currentValue > 1) {
            this.quantityInput.value = currentValue - 1;
            this.updatePrices(1);
            this.syncVariants();
          }
        });

        this.quantityPlus.addEventListener('click', () => {
          const currentValue = parseInt(this.quantityInput.value) || 1;
          this.quantityInput.value = currentValue + 1;
          this.updatePrices(1);
          this.syncVariants();
        });

        this.addEventListener('change', (e) => {
          if (e.target.matches('.bundle-deal__variant-select')) {
            this.handleVariantChange(e.target);
          }
        });

        this.addToCartButton.addEventListener('click', () => this.addToCart());
      }

      getSelectedMode() {
        const checkedRadio = this.querySelector('.bundle-deal__mode-radio:checked');
        return checkedRadio ? checkedRadio.value : 'quantity';
      }

      updateMode(mode) {
        this.optionsContainer.dataset.mode = mode;
        this.querySelectorAll('.bundle-deal__quantity').forEach(el => {
          el.style.display = el.dataset.mode === mode ? 'block' : 'none';
        });

        if (mode === 'quantity') {
          this.optionsContainer.dataset.bundleOptions = '1';
          this.querySelectorAll('.bundle-deal__option').forEach((option, index) => {
            option.style.display = index === 0 ? 'block' : 'none';
            option.classList.toggle('bundle-deal__option--active', index === 0);
          });
          const gift = this.querySelector('.bundle-deal__gift');
          if (gift) gift.style.display = 'none';
        }
      }

      updateDisplay(quantity) {
        if (this.optionsContainer.dataset.mode !== 'bundle') {
          quantity = '1';
        }

        const quantityNum = parseInt(quantity);
        this.optionsContainer.dataset.bundleOptions = quantityNum;

        if (this.optionsContainer.dataset.mode === 'bundle') {
          this.querySelectorAll('.bundle-deal__option').forEach((option, index) => {
            option.style.display = (index + 1) === quantityNum ? 'block' : 'none';
            option.classList.toggle('bundle-deal__option--active', (index + 1) === quantityNum);
            const gift = option.querySelector('.bundle-deal__gift');
            if (gift) {
              gift.style.display = quantityNum >= this.freeGiftThreshold ? 'block' : 'none';
            }
          });
        }

        this.updatePrices(quantityNum);
      }

      updatePrices(quantity) {
        const mode = this.optionsContainer.dataset.mode;
        const option = this.querySelector(`.bundle-deal__option--${quantity}`) || this.querySelector('.bundle-deal__option--1');
        const selects = option.querySelectorAll('.bundle-deal__variant-select');
        let totalPrice = 0;
        let totalComparePrice = 0;

        selects.forEach(select => {
          const selectedOption = select.options[select.selectedIndex];
          totalPrice += parseInt(selectedOption.dataset.price);
          totalComparePrice += parseInt(selectedOption.dataset.comparePrice);
        });

        let discountedPrice = totalPrice;
        if (mode === 'bundle') {
          const discount = this.discounts[quantity] || 0;
          discountedPrice = totalPrice * (1 - discount);
        } else {
          const qty = parseInt(this.quantityInput.value) || 1;
          discountedPrice = totalPrice * qty;
          totalComparePrice = totalComparePrice * qty;
        }

        const priceElement = option.querySelector('.bundle-deal__discounted-price');
        const comparePriceElement = option.querySelector('.bundle-deal__compare-price');

        priceElement.textContent = this.formatMoney(discountedPrice);
        priceElement.dataset.price = discountedPrice;

        if (comparePriceElement) {
          comparePriceElement.textContent = this.formatMoney(totalComparePrice);
          comparePriceElement.dataset.comparePrice = totalComparePrice;
        }
      }

      handleVariantChange(select) {
        const quantity = parseInt(this.optionsContainer.dataset.bundleOptions);
        const index = parseInt(select.dataset.index);
        const selectedOption = select.options[select.selectedIndex];
        const variantId = selectedOption.value;
        const price = parseInt(selectedOption.dataset.price);
        const comparePrice = parseInt(selectedOption.dataset.comparePrice);
        const image = selectedOption.dataset.image;
        const color = selectedOption.dataset.color;

        // Update hidden input
        const hiddenInput = select.parentElement.querySelector('.bundle-deal__variant-id');
        hiddenInput.value = variantId;

        // Update image
        const imageElement = select.parentElement.querySelector('.bundle-deal__variant-image');
        if (imageElement && image) {
          console.log(`Updating image for variant ${variantId}: ${image}`);
          imageElement.src = image;
          imageElement.dataset.image = image;
          imageElement.alt = selectedOption.textContent || 'Product Image';
        } else {
          console.warn(`No image found for variant ${variantId}`);
        }

        // Update prices
        this.updatePrices(quantity);

        // Dispatch variant:change event for global.js integration
        this.dispatchEvent(new CustomEvent('variant:change', {
          bubbles: true,
          detail: { variantId, color }
        }));
      }

      syncVariants() {
        const quantity = parseInt(this.optionsContainer.dataset.bundleOptions);
        const option = this.querySelector(`.bundle-deal__option--${quantity}`) || this.querySelector('.bundle-deal__option--1');
        const selects = option.querySelectorAll('.bundle-deal__variant-select');

        selects.forEach((select, index) => {
          const hiddenInput = select.parentElement.querySelector('.bundle-deal__variant-id');
          const selectedOption = select.options[select.selectedIndex];
          hiddenInput.value = selectedOption.value;

          const imageElement = select.parentElement.querySelector('.bundle-deal__variant-image');
          if (imageElement && selectedOption.dataset.image) {
            console.log(`Syncing image for variant ${selectedOption.value}: ${selectedOption.dataset.image}`);
            imageElement.src = selectedOption.dataset.image;
            imageElement.alt = selectedOption.textContent || 'Product Image';
            imageElement.dataset.image = selectedOption.dataset.image;
          } else {
            console.warn(`No image to sync for variant ${selectedOption.value}`);
          }
        });
      }

      formatMoney(cents) {
        const formatter = new Intl.NumberFormat('en-US', {
          style: 'currency',
          currency: this.currency
        });
        return formatter.format(cents / 100);
      }

      async addToCart() {
        const mode = this.optionsContainer.dataset.mode;
        let items = [];

        if (mode === 'quantity') {
          const quantity = parseInt(this.quantityInput.value) || 1;
          const variantId = this.querySelector('.bundle-deal__option--1 .bundle-deal__variant-id').value;
          items.push({
            id: parseInt(variantId),
            quantity
          });
        } else {
          const quantity = parseInt(this.optionsContainer.dataset.bundleOptions);
          const option = this.querySelector(`.bundle-deal__option--${quantity}`);
          items = Array.from(option.querySelectorAll('.bundle-deal__variant-id')).map(input => ({
            id: parseInt(input.value),
            quantity: 1
          }));
        }

        try {
          const response = await fetch('/cart/add.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ items })
          });

          if (!response.ok) throw new Error('Failed to add to cart');
          window.location.href = '/cart';
        } catch (error) {
          console.error('Add to cart error:', error);
          alert('There was an error adding your items to the cart. Please try again.');
        }
      }
    }

    customElements.define('bundle-deal', BundleDeal);
  </script>
</bundle-deal>
